---
- hosts: local
  connection: local
  become: False
  gather_facts: False
  vars_files:
    - aws_keys.yml

  tasks:

    - name: Create security group for EC2
      ec2_group:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ my_secret_key }}"
        name: project
        description: Webservers security group
        region: us-east-2
        rules:
          - proto: tcp
            from_port: 5000
            to_port: 5000
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: sg
  
    - name: Launch EC2 instances
      amazon.aws.ec2:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ my_secret_key }}"
        key_name: kp-ansible-project.pem
        instance_type: t2.micro
        image: ami-00399ec92321828f5
        group_id:
          - "{{ sg.group_id }}"
        wait: yes
        ec2_url: https://ec2.us-east-2.amazonaws.com
        count: 2
      register: ec2
    - name: Add EC2 instances to inventory
      add_host:
        name: "{{ item.public_ip }}"
        groups: remote
      loop: "{{ ec2.instances }}"
    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 60
        timeout: 120
      loop: "{{ ec2.instances }}"

    - name: Get Nexus archives
      shell:
        cmd: curl -O http://172.27.208.1:8081/repository/Projet_POEI_final/archive_version4.tar.gz

- hosts: remote
  remote_user: ubuntu
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: Copy app files
      copy:
        src: ./archive_version4.tar.gz
        dest: /home/ubuntu/

    - name: Unzip Nexus Archives
      shell:
        cmd: tar -xzf archive_version4.tar.gz

    - name: DL get-pip files
      shell:
        cmd: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py

    - name: execute pip's installation
      shell:
        cmd: python3 get-pip.py

    - name: Add pip folder to path
      shell:
        chdir: Projet_POEI_final
        cmd: export PATH=$PATH:/home/ubuntu/.local/bin

    - name: Pip setup for Flask
      pip:
        name:
          - flask
    - name: execute app
      shell:
          chdir: Projet_POEI_final
          cmd: ( ( nohup python3 app.py </dev/null 1>/dev/null 2>&1 ) &)
